// client/src/components/EditProjectDialog.tsx

// ... (省略 imports 和 schema)

export default function EditProjectDialog({ project, open, onOpenChange }: EditProjectDialogProps) {
  // ... (省略 state 和 hooks)

  const getDefaultValues = (proj: SavedProject | null): Partial<EditProjectFormData> => {
    if (!proj) {
      // 關鍵修改(A): 確保全新專案的預設值為 undefined
      return {
        projectName: "",
        startDate: "",
        endDate: "",
        targetRevenue: undefined,
        targetAov: undefined,
        targetConversionRate: undefined,
        cpc: undefined,
      };
    }
    const projectData = proj.projectData || {};
    return {
      projectName: proj.projectName || "",
      startDate: projectData.startDate || "",
      endDate: projectData.endDate || "",
      // 關鍵修改(B): 如果資料庫值為 0，保留 0；若為 null/undefined，則設為 undefined
      targetRevenue: projectData.targetRevenue ?? undefined,
      targetAov: projectData.targetAov ?? undefined,
      targetConversionRate: projectData.targetConversionRate ?? undefined,
      cpc: projectData.cpc ?? undefined,
    };
  };

  const form = useForm<EditProjectFormData>({
    resolver: zodResolver(campaignPlannerSchema),
    defaultValues: getDefaultValues(project),
    mode: "onChange",
  });

  // ... (省略 useEffect 和 handleSave)

  return (
    // ... (省略外層 JSX)
    <FormField
      control={form.control}
      name="targetRevenue" // 以目標營業額為例，其他數字欄位做相同修改
      render={({ field }) => (
        <FormItem>
          <FormLabel>目標營業額</FormLabel>
          <FormControl>
            <Input
              type="number"
              placeholder="例如：500000"
              {...field}
              // 關鍵修改(C): 與 calculator.tsx 相同的邏輯
              value={field.value ?? ""}
              onChange={(e) =>
                field.onChange(e.target.value === '' ? undefined : parseFloat(e.target.value))
              }
            />
          </FormControl>
          <FormMessage />
        </FormItem>
      )}
    />
    // 請對 targetAov, targetConversionRate, cpc 欄位做相同的修改
    // ... (省略剩餘 JSX)
  );
}